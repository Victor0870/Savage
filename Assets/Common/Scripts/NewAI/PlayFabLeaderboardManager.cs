using PlayFab;
using PlayFab.ClientModels;
using UnityEngine;
using System.Collections.Generic;

public class PlayFabLeaderboardManager : MonoBehaviour
{
    public static PlayFabLeaderboardManager Instance { get; private set; }

    private void Awake()
    {
        if (Instance == null)
        {
            Instance = this;
        }
        else
        {
            Destroy(gameObject);
        }
    }

    /// <summary>
    /// L·∫•y b·∫£ng x·∫øp h·∫°ng t·ª´ PlayFab theo t√™n ch·ªâ s·ªë
    /// </summary>
    public void GetLeaderboard(string statName, int maxResults = 10)
    {
        if (Application.internetReachability == NetworkReachability.NotReachable)
        {
            Debug.LogError("‚ùå Kh√¥ng c√≥ k·∫øt n·ªëi m·∫°ng! Kh√¥ng th·ªÉ l·∫•y b·∫£ng x·∫øp h·∫°ng.");
            return;
        }

        var request = new GetLeaderboardRequest
        {
            StatisticName = statName,
            StartPosition = 0,
            MaxResultsCount = maxResults
        };

        PlayFabClientAPI.GetLeaderboard(request, OnLeaderboardSuccess, OnLeaderboardError);
    }

    private void OnLeaderboardSuccess(GetLeaderboardResult result)
    {
        Debug.Log($"‚úÖ Leaderboard l·∫•y th√†nh c√¥ng!");

        foreach (var entry in result.Leaderboard)
        {
            string playerName = !string.IsNullOrEmpty(entry.DisplayName) ? entry.DisplayName : entry.PlayFabId;
            Debug.Log($"üèÜ Rank {entry.Position + 1}: {playerName} - {entry.StatValue}");
        }
    }

    private void OnLeaderboardError(PlayFabError error)
    {
        Debug.LogError("‚ùå L·ªói khi l·∫•y leaderboard: " + error.GenerateErrorReport());
    }

    /// <summary>
    /// L·∫•y b·∫£ng x·∫øp h·∫°ng EXP
    /// </summary>
    public void GetGlobalEXPLeaderboard()
    {
        GetLeaderboard("GlobalEXP");
    }

    /// <summary>
    /// L·∫•y b·∫£ng x·∫øp h·∫°ng Level
    /// </summary>
    public void GetLevelLeaderboard()
    {
        GetLeaderboard("GlobalLevel");
    }

    /// <summary>
    /// G·ª≠i EXP c·ªßa ng∆∞·ªùi ch∆°i l√™n PlayFab
    /// </summary>
    public void UpdateEXPLeaderboard(int exp)
    {
        if (Application.internetReachability == NetworkReachability.NotReachable)
        {
            Debug.LogError("‚ùå Kh√¥ng c√≥ k·∫øt n·ªëi m·∫°ng! Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t EXP.");
            return;
        }

        var request = new UpdatePlayerStatisticsRequest
        {
            Statistics = new List<StatisticUpdate>
            {
                new StatisticUpdate { StatisticName = "GlobalEXP", Value = exp }
            }
        };

        PlayFabClientAPI.UpdatePlayerStatistics(request,
            result => Debug.Log($"‚úÖ C·∫≠p nh·∫≠t EXP {exp} l√™n PlayFab th√†nh c√¥ng!"),
            error => Debug.LogError("‚ùå L·ªói khi c·∫≠p nh·∫≠t EXP: " + error.GenerateErrorReport()));
    }

    /// <summary>
    /// G·ª≠i Level c·ªßa ng∆∞·ªùi ch∆°i l√™n PlayFab
    /// </summary>
    public void UpdateLevelLeaderboard(int level)
    {
        if (Application.internetReachability == NetworkReachability.NotReachable)
        {
            Debug.LogError("‚ùå Kh√¥ng c√≥ k·∫øt n·ªëi m·∫°ng! Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t Level.");
            return;
        }

        var request = new UpdatePlayerStatisticsRequest
        {
            Statistics = new List<StatisticUpdate>
            {
                new StatisticUpdate { StatisticName = "GlobalLevel", Value = level }
            }
        };

        PlayFabClientAPI.UpdatePlayerStatistics(request,
            result => Debug.Log($"‚úÖ C·∫≠p nh·∫≠t Level {level} l√™n PlayFab th√†nh c√¥ng!"),
            error => Debug.LogError("‚ùå L·ªói khi c·∫≠p nh·∫≠t Level: " + error.GenerateErrorReport()));
    }
}
